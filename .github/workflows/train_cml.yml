name: model-training

on:
  pull_request:
    branches: ["main"]

permissions: write-all

jobs:
  train_and_report_eval_performance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/venv  
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # Setup CML GitHub Action
      - name: Setup CML
        uses: iterative/setup-cml@v2
          
      - name: Train model
        run: |
          python3 preprocess_dataset.py
          python3 train.py

      #- name: append report to README file
        #run: |
          #echo "## Model Evaluation" >> README.md
          #cat metrics.json >> README.md
          #echo "![confusion matrix plot](./confusion_matrix.png)" >> README.md

      - name: Write CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Add metrics data to markdown
          cat metrics.json >> model_eval_report.md
          
          # Add confusion matrix plot to markdown
          echo "![confusion matrix plot](./confusion_matrix.png)" >> model_eval_report.md

          # Create comment from markdown report
          cml comment create model_eval_report.md
          
     # - name: Commit changes
    #    run: |
          #git config --local user.email "action@github.com"
          #git config --local user.name "GitHub Action"
          #git checkout -b update-readme  # Create and switch to a new branch
          #git add README.md
          #git commit -m "Update README by GitHub Actions"
          #git config pull.rebase false
          #git pull origin update-readme --allow-unrelated-histories
          #git push origin update-readme  # Push the new branch to the remote repository

